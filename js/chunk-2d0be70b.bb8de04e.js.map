{"version":3,"sources":["webpack:///./src/views/Auth.vue","webpack:///./src/use/login-form.js","webpack:///./src/views/Auth.vue?80ab"],"names":["_createElementVNode","class","for","_createElementBlock","onSubmit","_ctx","_hoisted_1","_hoisted_2","invalid","_hoisted_3","type","id","onBlur","_hoisted_5","disabled","_hoisted_8","useLoginForm","store","useStore","router","useRouter","handleSubmit","isSubmitting","submitCount","useForm","async","console","log","values","dispatch","push","e","isTooManyAttempts","computed","value","watch","setTimeout","email","errorMessage","eError","handleBlur","eBlur","useField","yup","trim","required","password","pError","pBlur","min","setup","route","useRoute","query","message","error","root","__exports__","render"],"mappings":"iJAGIA,eAAwB,UAApB,mBAAe,G,EAElBA,eAAgF,MAA5EC,MAAM,eAAc,uDAAmD,G,EAG1ED,eAAgC,SAAzBE,IAAI,SAAQ,SAAK,G,YAMxBF,eAAoC,SAA7BE,IAAI,YAAW,UAAM,G,kCAOzBD,MAAM,e,gDAnBbE,eAoBO,QApBDF,MAAM,OAAQG,SAAM,mCAAUC,6BAAQ,e,CAC1CC,EAECC,EAEDP,eAIM,OAJAC,MAAK,gCAAAO,QAA6BH,a,CACtCI,EAAgC,eAChCT,eAA6D,SAAtDU,KAAK,QAAQC,GAAG,Q,qCAAiBN,QAAK,GAAGO,OAAI,oBAAEP,yB,mBAAdA,WAC3BA,UAAM,iBAAnBF,eAAyC,yBAAjBE,UAAM,8BAGhCL,eAIM,OAJAC,MAAK,gCAAAO,QAA6BH,a,CACtCQ,EAAoC,eACpCb,eAAsE,SAA/DU,KAAK,WAAWC,GAAG,W,qCAAoBN,WAAQ,GAAGO,OAAI,oBAAEP,yB,mBAAjBA,cACjCA,UAAM,iBAAnBF,eAAyC,yBAAjBE,UAAM,8BAGhCL,eAAsG,UAA9FC,MAAM,cAAcS,KAAK,SAAUI,SAAUT,gBAAgBA,qBAAmB,QAAK,KAE9DA,qBAAiB,iBAAhDF,eAAqG,MAArGY,EAAkD,kDAA6C,2B,8DCb5F,MAAMC,EAAe,KAExB,MAAMC,EAAQC,iBACRC,EAASC,kBAET,aAAEC,EAAY,aAAEC,EAAY,YAAEC,GAAgBC,iBAE9CpB,EAAWiB,EAAaI,UAC1B,IACIC,QAAQC,IAAI,QAASC,SACfX,EAAMY,SAAS,aAAcD,GACnCT,EAAOW,KAAK,KAEd,MAAOC,OAGPC,EAAoBC,eAAS,IAAMV,EAAYW,OAAS,GAG9DC,eAAMH,EAAmBE,GAASA,GAASE,WAAW,IAAMb,EAAYW,MAAQ,EAAG,MAGnF,MAAQA,MAAOG,EAAOC,aAAcC,EAAQC,WAAYC,GAAUC,eAC9D,QACAC,SAEKC,OACAC,SAAS,qBACTR,MAAM,8BAEPH,MAAOY,EAAUR,aAAcS,EAAQP,WAAYQ,GAAUN,eACjE,WACAC,SAEKC,OACAC,SAAS,wBACTI,IAAI,EAAG,yCAGhB,MAAO,CACHZ,QAAOS,WAAUP,SAAQQ,SAAQN,QAAOO,QAAO5C,WAAUkB,eAAcU,sB,gBDdhE,GACbkB,QAEE,MAAMC,EAAQC,iBACRnC,EAAQC,iBAUd,OARIiC,EAAME,MAAMC,SACdrC,EAAMY,SACF,aACA,CAAEK,MAAOqB,eAAMJ,EAAME,MAAMC,SAAU5C,KAAM,WAC3C,CAAE8C,MAAM,IAIP,IAAKxC,O,qBE3ChB,MAAMyC,EAA2B,IAAgB,EAAQ,CAAC,CAAC,SAASC,KAErD","file":"js/chunk-2d0be70b.bb8de04e.js","sourcesContent":["<template>\r\n\r\n  <form class=\"card\" @submit.prevent=\"onSubmit\">\r\n    <h1>Войти в систему</h1>\r\n\r\n     <h4 class=\"text-danger\">Для теста используйте пресохраненный логин и пароль</h4>\r\n\r\n    <div :class=\"['form-control', {invalid: eError}]\"> <!-- Первый класс из массива всегда, второй только при наличии ошибки -->\r\n      <label for=\"email\">Email</label>\r\n      <input type=\"email\" id=\"email\" v-model=\"email\" @blur=\"eBlur\"> <!-- Связываем v-model c нашей валидацией, Слушаем событие blur -->\r\n      <small v-if=\"eError\">{{ eError }}</small> <!-- Выводим ошибку из валидации -->\r\n    </div>\r\n\r\n    <div :class=\"['form-control', {invalid: pError}]\">\r\n      <label for=\"password\">Пароль</label>\r\n      <input type=\"password\" id=\"password\" v-model=\"password\" @blur=\"pBlur\">\r\n      <small v-if=\"pError\">{{ pError }}</small>\r\n    </div>\r\n\r\n    <button class=\"btn primary\" type=\"submit\" :disabled=\"isSubmitting || isTooManyAttempts\">Войти</button>\r\n    <!-- Дизейблим кнопку пока идет отправка -->\r\n    <div class=\"text-danger\" v-if=\"isTooManyAttempts\">Слишком много попыток входа. Попробуйте позже</div>\r\n  </form>\r\n\r\n</template>\r\n\r\n<script>\r\n\r\nimport { useLoginForm } from '@/use/login-form';\r\nimport { useRoute } from 'vue-router';\r\nimport { useStore } from 'vuex';\r\nimport { error } from '@/utils/error';\r\n\r\n\r\nexport default {\r\n  setup() {\r\n\r\n    const route = useRoute(); // Получаем параметры роута\r\n    const store = useStore(); // Получаем store из Vuex\r\n\r\n    if (route.query.message) {\r\n      store.dispatch(\r\n          'setMessage',\r\n          { value: error(route.query.message), type: 'warning' },\r\n          { root: true },\r\n      );\r\n    }\r\n\r\n    return { ...useLoginForm() }; // Вызываем собственный хук и с помощью spread раскрываем все поля объекта\r\n\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>","import { useField, useForm } from 'vee-validate';\r\nimport { computed, watch } from 'vue';\r\nimport * as yup from 'yup';\r\nimport { useStore } from 'vuex';\r\nimport { useRouter } from 'vue-router';\r\n\r\n\r\n// Создаем собственный хук\r\nexport const useLoginForm = () => {\r\n\r\n    const store = useStore(); // Получаем store из Vuex\r\n    const router = useRouter(); // Получаем router из vue-router\r\n\r\n    const { handleSubmit, isSubmitting, submitCount } = useForm(); // Валидация всей формы из пакета 'vee-validate'\r\n\r\n    const onSubmit = handleSubmit(async values => { // Обработчик события Submit\r\n        try {\r\n            console.log('Form:', values);\r\n            await store.dispatch('auth/login', values); // Вызываем actions (login) и передаем values нашей формы\r\n            router.push('/'); // Перенапаправляем на страницу HOME\r\n\r\n        } catch (e) {}\r\n    });\r\n\r\n    const isTooManyAttempts = computed(() => submitCount.value >= 3);\r\n    // computed - используем, если нужно что то высчитать на основании других данных (переменных)\r\n\r\n    watch(isTooManyAttempts, value => value && setTimeout(() => submitCount.value = 0, 2000));\r\n    // watch - следим за какими то данной или переменной, и при изменении вызываем колбэк\r\n\r\n    const { value: email, errorMessage: eError, handleBlur: eBlur } = useField( // Валидация полей из пакета 'vee-validate'\r\n        'email',\r\n        yup\r\n            .string()\r\n            .trim()\r\n            .required('Введите ваш email')\r\n            .email('Введите корректный email'),\r\n    );\r\n    const { value: password, errorMessage: pError, handleBlur: pBlur } = useField(\r\n        'password',\r\n        yup\r\n            .string()\r\n            .trim()\r\n            .required('Введите ваш password')\r\n            .min(6, 'Пароль должен быть больше 6 символов'),\r\n    );\r\n\r\n    return {\r\n        email, password, eError, pError, eBlur, pBlur, onSubmit, isSubmitting, isTooManyAttempts,\r\n    };\r\n};","import { render } from \"./Auth.vue?vue&type=template&id=101c2967\"\nimport script from \"./Auth.vue?vue&type=script&lang=js\"\nexport * from \"./Auth.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"C:\\\\Frontend\\\\Projects\\\\Vue-js\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"sourceRoot":""}